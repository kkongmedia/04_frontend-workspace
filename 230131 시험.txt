1. jQuery 연동방법(폴더 트리 복잡하게 구성)
<script src="경로"></script>
../ -> 이전폴더

2. input type 속성
type="xxxx"
text : 한 줄 짜리 텍스트를 입력할 수 있는 텍스트 상자(기본값)
password : 비밀번호를 입력할 수 있는 텍스트 상자(입력값이 보이지 않음)
search : 검색을 위한 텍스트 상자, 값 입력시 초기화를 위한 x 버튼 나온다
url : 홈페이지 주소를 위한 텍스트 상자, 올바른 주소 양식이 아니면 제출되지 않는다.
eamil : 이메일을 위한 텍스트 상자, @ 가 없는 등 올바를 이메일 양식이 아니면 제출되지 않는다.
phone : 전화번호를 위한 텍스트 상자, 모바일로 입력하려고 하면 숫자키패드가 열린다.
textarea : 여러줄 입력이 가능한 텍스트 상자, 스타일 영역에서 resize 를 none으로 하면 마우스로 크기 조절이 불가능하다.
number : 숫자 값만 작성 가능한 텍스트 상자, 스핀박스가 표시된다.
range : 슬라이드 바를 통해 숫자 지정이 가능하다.
date : 연도, 월, 일을 입력 받을 수 있는 텍스트 상자
month : 연도, 월까지만 입력 받을 수 있는 텍스트 상자
week : 연도, 해당 연도으 ㅣ몇번째 주인지 입력 받을 수 잇는 텍스트 상자
time : 오전|오후, 시, 분을 입력받을 수 있는 텍스트 상자
datetime-local : 연도, 월, 일 오전|오후, 시, 분 입력받을 수 있는 텍스트 상자
submit : <form> 태그 내에 입력된 데이터를 서버로 전달 해주는 버튼 생성
reset : <form> 태그 내에 입력된 데이터들을 초기화 시켜주는 버튼 생성
button : 일반버튼 생성
radio : 제시한 여러개의 값들 중에서 오로지 한 개만 선택해야 될 때 name 송성값이 똑같은것들끼리 하나의 그룹으로 지어짐,
		제출시 현재 선택된(checked) 라디오 버튼의 value 값이 넘어감. 해당 라디오버튼 선택 시 어떤 값을 넘길지 value 값 명시해줘야한다.
checkbox : 제시한 여러개의 값들 중에서 여러개 선택 가능할 경우 제출시 현재 선택된(checked) 체크박스의 value 값 넘어감.
			동일한 키 값으로 여러 value 값이 넘어온 경우에는 스트링 배열에 담긴다.
color : 색상을 선택할 수 있는 input
file : 첨부하고자 하는 파일을 선택할 수 있는 input
hidden : 사용자에게 입력받지 않고, 화면에 노출시키지도 않고 넘겨야 하는 특정 값이 존재할 경우

3. div태그, span태그의 차이점
-div는 블럭요소 / span은 인라인요소

div 태그와 span태그의 차이점1 : 줄바꿈 적용
>div태그 : 블럭요소로 한 줄 단위로 영역 차지(이미 존재하는 태그 다음줄에 영역이 잡힘)
>span태그 : 인라인요소로 content 영역만 차지(줄바꿈이 발생되지 않고 옆으로 영역이 잡힘)

div 태그와 span태그의 차이점2 : 영역지정 방식
>div태그 : 사각형 박스로 영역을 지정
>span태그 : 문장 단위로 영역을 지정

4. infinity, NaN, eval(인자) 이런것들..? 윈도우 전역객체 속성
-infinity
양/음의 무한대를 나타내는 숫자값
어떤수를 0으로 나누었을때 나오는 값

-NaN *(Not a Number)
숫자가 아닌 숫를 표현하는 속성으로 숫자가 아닌 타입을 강제 형변환 하려는 경우 NaN 이라는 속성 반환

-eval(인자)
인자로 전달받은 문자열을 자바스크립트 코드로 변환하여 실행하는 전역함수

5. typeof() 이게 무엇인지?
화면에 출력(텍스트로 출력되기 때문에 콘솔 출력과 결과 다를 수 있음)
자료형 확인시 사용하는 함수 : typeof(변수명)

6. document 메소드들.. getElementById, getElementsClassName
**클래스 속성이 abc를 갖는 값을 변수 abc에 할당해라
const abc = document.getElementsClassName("abc");

7. window.onload(); 이게 뭔지 특징
window.onload=function(){
			실행내용;
			}
	JavaScript 에서의 window.onload 구문은 해당의 문서 요소들이 다 로드되고(그려지고, 렌더링되고)
	+ 외부 문서들(css파일)도 다 가지고 온 뒤에 실행됨
	
8. 자바스크립트를 작성하는 방법 3가지 - 내부/외부/인라인
inline(인라인) : 태그 내에 간단 소스 코드를 작성해서 실행되게 하는 방법
[표현법]<태그 on 이벤트명 = "해당 이 요소에 그 이벤트가 발생시 실행할 소스코드">

internal(내부) : html 문서 내에 소스코드를 작성해서 실해오디게 하는 방법
현재 html 문서내 script 태그 영역 안에 소스코드 작성
script태그는 head태그, body태그든 다 작성 가능

external(외부) : 별도의 .js 파일로 소스코드를 작성해서 가져다가 실행되게 하는 방법

9. 자바스크립트에서 배열 선언하는 방법 2가지
let arr = []
let arr = new Array(); 크기 지정할수도 안할수도

10. block scope, function scope 이게 무엇인지? =>{} 뭐가 다르냐..
var 는 function[al] scope == 변수가 선언된 함수 영역 내에서 사용가능
let, const는 block scope == 변수가 선언된 "블럭{}" 내에서만 사용가능(자바와 유사)

11. undefined가 언제 뜨는지?
- 값을 할당받지 못한 상태일때

12. 원시타입, 참조 타입 차이점 및 종류
* 원시타입
- 종류 : 숫자형, 문자형, 논리형, null, undefined(할당(값 세팅) 받지 못한 상태)
- 특징 : 원본이 바뀌어도 복사본은 변경되지 않음(리터럴 그 자체)

* 참조타입
- 종류 : 함수, 배열, 객체
- 특징 : 원본이 바뀌면 복사본도 똑같이 따라서 바뀜